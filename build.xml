<?xml version="1.0" encoding="UTF-8" ?>

<project name="Dropteam Drupal Project" default="help">
    <!-- property-definitions are overridden in ascending order: local overrides global -->

    <property file="phing/build.properties.local" />
    <property file="phing/build.properties.project" />
    <property file="phing/build.properties.global" />

    <target name="help" description="Phing target list">
        <exec executable="${phing.bin}"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>

    <includepath classpath="phing/src/Phing" />

    <echo msg="Loading PHP Codesniffer Configuration task." />
    <taskdef name="phpcodesnifferconfiguration" classname="\DrupalProject\Phing\PhpCodeSnifferConfigurationTask" />

    <echo msg="Loading PHPUnit Configuration task." />
    <taskdef name="phpunitconfiguration" classname="\DrupalProject\Phing\PhpUnitConfigurationTask" />

    <import file="phing/tasks/assets.xml"/>
    <import file="phing/tasks/cache.xml"/>
    <import file="phing/tasks/cmi.xml"/>
    <import file="phing/tasks/composer.xml"/>
    <import file="phing/tasks/database.xml"/>
    <import file="phing/tasks/enable-dev-settings.xml"/>
    <import file="phing/tasks/install.xml"/>
    <import file="phing/tasks/link-docroot.xml"/>
    <import file="phing/tasks/maintenance-mode.xml"/>
    <import file="phing/tasks/modules.xml"/>
    <import file="phing/tasks/set-config-dir.xml"/>
    <import file="phing/tasks/set-site-uuid.xml"/>
    <import file="phing/tasks/set-shortcut-uuid.xml"/>
    <import file="phing/tasks/setup-php-codesniffer.xml"/>
    <import file="phing/tasks/setup-behat.xml"/>
    <import file="phing/tasks/setup-phpunit.xml"/>
    <import file="phing/tasks/theme.xml"/>
    <import file="phing/tasks/update.xml"/>
    <import file="phing/tasks/writable-settings.xml"/>
    <import file="phing/tasks/writable-files-folder.xml"/>
    <import file="./vendor/drupal/phingdrushtask/import.xml" />

    <target
        name="build-dev"
        description="Build a development environment."
        depends="install-composer-dependencies, setup-behat, setup-php-codesniffer, setup-phpunit" />

    <target
        name="setup-dev"
        description="Set up 'development mode' for an installed website."
        depends="enable-dev-settings, enable-dev-modules" />

    <target
        name="install-local"
        description="Install the website and set up the local development environment."
        depends="build-dev, install, setup-dev, set-config-dir, set-site-uuid,set-shortcut-uuid" />
    
    <target
        name="install-dev"
        description="Install the website and set up the development environment."
        depends="build-dev, install, set-config-dir, set-site-uuid, set-shortcut-uuid" />

    <target
        name="install-qa"
        description="Install the website and set up the qa environment."
        depends="install-composer-dependencies, install, set-config-dir, set-site-uuid, set-shortcut-uuid" />
    
    <target
        name="install-preprod"
        description="Install the website and set up the qa environment."
        depends="install-composer-dependencies, install, set-config-dir, set-site-uuid, set-shortcut-uuid" />

    <target
        name="deploy-local-post-codeupdate"
        description="Deployment tasks on the dev environment after the code-update."
      depends="clear-cache, db-dump-save-rollback, install-composer-dependencies, db-dump-import, config-import, clear-cache, drush-updb, drush-entup, theme-update, assets_copy, clear-cache" />    
    
    <target
        name="deploy-dev-pre-codeupdate"
        description="Prepare deployment on the dev environment before the code-update."
        depends="maintenance-mode-on, clear-cache, db-dump-save-rollback" />
    
    <target
        name="deploy-dev-post-codeupdate"
        description="Deployment tasks on the dev environment after the code-update."
        depends="install-composer-dependencies, db-dump-import, config-import, clear-cache, drush-updb, drush-entup, theme-update, assets_copy, clear-cache, maintenance-mode-off" />

    <target
        name="deploy-preprod"
        description="Deployment tasks specific for the docker deployment that re-installs every time the whole site."
        depends="db-dump-import, config-import, clear-cache, uninstall-noprod-modules, drush-updb, drush-entup, theme-update, assets_copy, clear-cache" />
 
    <target
        name="deploy-preprod-pre-codeupdate"
        description="Prepare deployment on the dev environment before the code-update."
        depends="maintenance-mode-on, clear-cache, db-dump-save-rollback" />
    
    <target
        name="deploy-preprod-post-codeupdate"
        description="Deployment tasks on the dev environment after the code-update."
        depends="install-composer-dependencies, db-dump-import, config-import, clear-cache, drush-updb, drush-entup, theme-update, assets_copy, clear-cache, maintenance-mode-off" />

    <target
        name="deploy-prod-pre-codeupdate"
        description="Prepare deployment on the dev environment before the code-update."
        depends="maintenance-mode-on, clear-cache, db-dump-save-rollback" />
    
    <target
        name="deploy-prod-post-codeupdate"
        description="Deployment tasks on the dev environment after the code-update."
      depends="install-composer-dependencies, db-dump-import, config-import, clear-cache, drush-updb, drush-entup, theme-update, assets_copy, clear-cache, maintenance-mode-off" />

</project>
